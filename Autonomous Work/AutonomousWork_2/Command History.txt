
from numpy import*
import matplotlib.pyplot as plt
data = loadtxt('polynome.data')
pwd
cd desktop
cd s
ls
cd Autonomous work 2
from numpy import*
import matplotlib.pyplot as plt
data = loadtxt('polynome.data')
X = data[:, 0]
data
X
Y = data[:, 1]
Y
N = len(X)
N
len(Y)
def square(x):
    y = x*x
    return y
square(9)
square(4)
from numpy import*
x = linspace(0.,1.,10)
x
x = linspace(0., 10., 11)
x
x = linspace(0.,1.,100)
x
x = linspace(0.,1.,101)
x
for i in xrange(1,21):
    i
for i in range (1,21)
for i in range(1,21):
    i
print(i)
for i in range(1,21):
    print(i)


# Define the split - into 2 folds
kf = KFold(n_splits=2)
#Returns the number of splitting iterations in the cross-validator
kf.get_n_splits(X)
print(kf)

for train_index, test_index in kf.split(X):
    print('TRAIN:', train_index, 'TEST:', test_index)
    X_train, X_test = X[train_index], X[test_index]
    Y_train, Y_test = Y[train_index], Y[test_index]

